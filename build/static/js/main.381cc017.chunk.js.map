{"version":3,"sources":["searchComponents/MovieList.js","searchComponents/Search.js","movieComponents/Pagination.js","movieComponents/MovieHome.js","searchComponents/SearchResult.js","movieComponents/MovieInfo.js","Home.js","Footer.js","App.js","index.js"],"names":["MovieListItem","movies","to","show","id","ListItem","button","ListItemText","primary","name","MovieList","props","style","display","flex","flexDirection","justifyContent","alignItems","List","component","list","map","Search","onMoviesInputChange","e","setState","movieName","target","value","isFetching","fetch","then","response","json","state","importantText","bind","this","Grid","container","spacing","item","xs","TextField","label","type","margin","onChange","helperText","length","trim","Component","LEFT_PAGE","RIGHT_PAGE","range","from","step","i","push","Pagination","fetchPageNumbers","totalPages","currentPage","pageNeighbours","totalNumbers","startPage","Math","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","gotoPage","page","onPageChanged","f","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","ceil","className","index","href","onClick","MovieHome","data","tvShows","offset","currentShows","slice","results","totalShows","headerClass","join","Container","textAlign","textDecoration","CardMedia","height","image","original","CardContent","Button","variant","backgroundColor","color","premiered","startIcon","rating","average","CardActions","styles","appBar","position","Transition","Slide","direction","SearchResult","open","handleClose","match","params","Dialog","fullscreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","Typography","alt","src","medium","secondary","Divider","_embedded","episodes","classes","makeStyles","theme","gridTemplateColumns","GridTemplateRow","gridGap","divider","input","MovieInfo","movieDetails","loading","location","pathname","split","details","root","classname","paddingTop","borderRadius","Card","genres","genre","summary","language","runtime","schedule","time","days","day","status","cast","actor","width","person","alignContent","Home","exact","path","Footer","fontSize","fontWeight","align","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.381cc017.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MovieListItem = ({movies}) => (\n    <Link to={`/movies/${movies.show.id}`}>\n        <ListItem button>\n        <ListItemText primary={movies.show.name} />\n        </ListItem>\n    </Link>\n)\n\nfunction MovieList(props) {\n    return (\n        <div style={{\n            display:'flex',\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems:'center'\n        }}>\n            <List component=\"nav\">\n                {props.list.map(movies =>(\n                    <MovieListItem movies={movies} key={movies.show.id} />\n                ))}\n            </List>\n        </div>\n    )\n}\n\nexport default MovieList\n","import React, { Component } from 'react';\nimport MovieList from './MovieList';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movies: [],\n            movieName: \"\",\n            isFetching: false,\n            importantText: \"\"\n        }\n\n        this.onMoviesInputChange = this.onMoviesInputChange.bind(this);\n    }\n\n    onMoviesInputChange = e => {\n        this.setState({movieName:e.target.value, isFetching:true})\n        fetch(`https://api.tvmaze.com/search/shows?q=${e.target.value}`)\n        .then((response) => response.json())\n        .then(json => this.setState({movies: json, isFetching: false}))\n    }\n\n    render() {\n        const { movies, movieName, isFetching, importantText } = this.state\n\n        return (\n            <div>\n                <div>\n                   <Grid container spacing={1} alignItems=\"flex-end\">\n                       <Grid item xs={5}></Grid>\n                       <Grid item>\n                            <TextField\n                            id=\"search\" \n                            label=\"Search Movies\" \n                            type=\"search\"\n                            margin=\"normal\"\n                            value={movieName} \n                            onChange={this.onMoviesInputChange}\n                            helperText={importantText}\n                            />\n                       </Grid>\n                       <Grid item>\n                          <SearchIcon />\n                       </Grid>\n                       <Grid item xs={4}></Grid>\n                   </Grid>\n                </div>\n                <div>\n                        {\n                            !isFetching && movies.length === 0 && movieName.trim() === \"\"\n                            &&\n                            <p></p>\n                        }\n                        {\n                            !isFetching && movies.length === 0 && movieName.trim() !== \"\"\n                            &&\n                            <p>No Movies have been found with this name</p>\n                        }\n                        \n                        {\n                            !isFetching && <MovieList list={this.state.movies}/>\n                        }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 10, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 10;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    \n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n      }\n\n      case (!hasLeftSpill && hasRightSpill): {\n        const extraPages = range(endPage + 1, endPage + spillOffset);\n        pages = [...pages, ...extraPages, RIGHT_PAGE];\n        break;\n      }\n\n      case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Shows Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Search from '../searchComponents/Search';\nimport Pagination from './Pagination';\nimport '../index.css';\n\nimport Container from '@material-ui/core/Container';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\n\n\n\nexport class MovieHome extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            tvShows: [],\n            currentShows: [],\n            currentPage: null,\n            totalPages: null\n        }\n    }\n\n\n    componentDidMount(){\n        fetch(\"https://api.tvmaze.com/shows\")\n        .then((response) => response.json())\n        .then((results) => {\n            this.setState({\n                tvShows: results\n            });\n        })\n    }\n\n    onPageChanged = data => {\n      const { tvShows } = this.state;\n      const { currentPage, totalPages, pageLimit } = data;\n  \n      const offset = (currentPage - 1) * pageLimit;\n      const currentShows = tvShows.slice(offset, offset + pageLimit);\n  \n      this.setState({ currentPage, currentShows, totalPages });\n    }\n\n    render() {\n\n          const { tvShows, currentShows, currentPage, totalPages } = this.state;\n\n          const totalShows = tvShows.length;\n\n          if (totalShows === 0) return null;\n\n          const headerClass = ['text-dark py-2 pr-4 m-0', currentPage ? 'border-gray border-right' : ''].join(' ').trim();\n\n        return (\n                <Container>\n                    <Search />\n\n                    <div className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\n\n                          <div className=\"d-flex flex-row align-items-center\">\n\n                              <h2 className={headerClass}>\n                                <strong className=\"text-secondary\">{totalShows}</strong> TV Shows\n                              </h2>\n                              \n                              { currentPage && (\n                                <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\n                                  Page <span className=\"font-weight-bold\">{ currentPage }</span> / <span className=\"font-weight-bold\">{ totalPages }</span>\n                                </span>\n                              ) }\n\n                          </div>\n\n                          <div className=\"d-flex flex-row py-4 align-items-center\">\n                            <Pagination totalRecords={totalShows} pageLimit={16} pageNeighbours={1} onPageChanged={this.onPageChanged} />\n                          </div>\n                          \n                    </div>\n\n                    <div className=\"gridContainer\" spacing={3}>\n                        {currentShows.map((item, id) => {\n                            return(\n                                <div \n                                    key={id} \n                                    style={{textAlign: 'justify'}}\n                                    className='gridItem' \n                                >\n                                    <Link style={{ textDecoration: 'none' }} to={`/movieinfo/${item.id}`}  >\n                                    <div>\n                                        <CardMedia \n                                            style={{height:400}}\n                                            component=\"img\" \n                                            image={item.image.original} \n                                        />\n                                        <CardContent>\n                                            <Button variant=\"contained\" style={{backgroundColor: \"#000000\", color: \"#ffffff\"}}>\n                                                {item.name}\n                                            </Button><br/>\n                                            <Button variant=\"outlined\">\n                                                Premiered: {item.premiered}\n                                            </Button><br/>\n                                            <Button startIcon={<StarRoundedIcon />} variant=\"contained\" color=\"primary\">\n                                                {item.rating.average}\n                                            </Button>\n                                        </CardContent>\n                                        <CardActions>\n                                        </CardActions>\n                                    </div>\n                                    </Link>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </Container>\n            )\n        }\n    }\n    \n\nexport default MovieHome","import React ,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\nexport class SearchResult extends Component {\n    \n        state = {\n            open:false,\n            show:null\n        }\n        \n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n\n        fetch(`https://api.tvmaze.com/shows/${id}?embed=episodes`)\n        .then((response) => response.json())\n        .then(json => this.setState({show:json, open:true}))\n    }\n\n    render() {\n        const {show} = this.state;\n        return (\n            <div>\n                {\n                    show !== null && \n                        <Dialog \n                             fullscreen \n                             open={this.state.open} \n                             onClose={this.handleClose}\n                             TransitionComponent={Transition} \n                        >\n                    \n                                <AppBar style={styles.appBar}>\n                                    <Toolbar>\n                                        <Link to={'/'}>\n                                            <IconButton color=\"default\" onClick={this.handleClose} aria-label=\"Close\">\n                                                <CloseIcon />\n                                            </IconButton>\n                                        </Link>\n                                        <Typography variant=\"title\" color=\"inherit\" style={styles.flex}>\n                                            {show.name}\n                                        </Typography>\n                                    </Toolbar>\n                                </AppBar>\n\n                                <div style={{\n                                    flex: 1,\n                                    display:'flex',\n                                    flexDirection: 'row',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                    <div>\n                                        <ListItem button>\n                                            {\n                                                show.image != null &&\n                                                <img alt=\"Show\" src={show.image.medium}/>\n                                            }\n                                        </ListItem>\n                                    </div>\n\n                                    <div>\n                                        <List>\n                                            <ListItem button>\n                                                <ListItemText primary=\"Premiered\" secondary={show.premiered} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                            <ListItem button>\n                                                <ListItemText primary=\"Rating\" secondary={show.rating.average} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                            <ListItem button>\n                                                <ListItemText primary=\"Episodes\" secondary={show._embedded.episodes.length} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                        </List>\n                                    </div>\n\n                                </div>\n                        </Dialog>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SearchResult;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../index.css'\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Divider from '@material-ui/core/Divider';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(12, 1fr)',\n        GridTemplateRow: 'auto',\n        gridGap: theme.spacing(5),\n      },\n      Grid: {\n        textAlign: 'justify',\n      },\n    divider: {\n        margin: theme.spacing(2, 0),\n      },\n    button: {\n        margin: theme.spacing(1),\n      },\n    input: {\n        display: 'none',\n      },\n  }));\n\n\nexport class MovieInfo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movieDetails: {},\n            loading: true\n        }\n    }\n\n\n    componentDidMount(){\n\n        let id = this.props.location.pathname.split('/')[2];\n\n        fetch(`https://api.tvmaze.com/shows/${id}?embed=cast`)\n        .then((response) => response.json())\n        .then((details) => {\n            this.setState({\n                movieDetails: details,\n                loading: false\n            });\n        })\n    }\n\n    render() {\n        return (\n                <Container className={classes.root}>\n                    {this.state.loading ? (\n                    <div>Loading...</div>\n                    ) : (\n                    <div classname=\"movieDetails\">\n                        <div  className=\"posterContainer\" style={{paddingTop: '3%'}}>\n                            <div className=\"poster\" style={{borderRadius: 5}}>\n                                <Card>\n                                    <CardMedia\n                                        style={{height:550}}\n                                        component=\"img\" \n                                        image={this.state.movieDetails.image.original}\n                                    />\n                                    <CardContent style={{textAlign: 'justify'}}>\n                                        <Button variant=\"contained\" style={{backgroundColor: \"#000000\", color: \"#ffffff\"}}>\n                                          <strong>{this.state.movieDetails.name}</strong>\n                                        </Button><br/>\n                                        <Button variant=\"outlined\" className={classes.button}>\n                                            <strong>Premiered: {this.state.movieDetails.premiered}</strong>\n                                        </Button><br/>\n                                        <Button startIcon={<StarRoundedIcon />} variant=\"contained\" color=\"primary\">\n                                           {this.state.movieDetails.rating.average}\n                                        </Button><br/>\n                                        <Button variant=\"outlined\" className={classes.button}>\n                                            <strong>Genres: {this.state.movieDetails.genres.map((genre, id) => {\n                                                return (\n                                                    <span key={id}>\n                                                        {genre + ' '}\n                                                    </span>\n                                                    )\n                                                }\n                                            )}</strong>\n                                        </Button>\n                                    </CardContent>\n                                </Card>\n                            </div>\n\n                            <div className=\"movieInfo\" xs={8} style={{textAlign: 'justify', }}>\n                                <div className=\"summary\">\n                                    <Button variant=\"contained\" style={{backgroundColor: \"#000000\", color: \"#ffffff\"}}>\n                                        <h3>Summary</h3>\n                                    </Button>\n                                    <br/>\n                                    {this.state.movieDetails.summary}\n                                </div>\n                                <Divider />\n                                <div className=\"language\">\n                                  <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                     <strong>Language:</strong>\n                                  </Button> {this.state.movieDetails.language}\n                                </div>\n                                <Divider />\n                                <div className=\"runtime\">\n                                  <Button variant=\"contained\" style={{backgroundColor: \"#800080\", color: \"#ffffff\"}}>\n                                  <strong>Runtime:</strong>\n                                  </Button> {this.state.movieDetails.runtime}\n            \n                                </div>\n                                <Divider />\n                                <div className=\"schedule\">\n                                    <Button variant=\"contained\" style={{backgroundColor: \"#FF1493\", color: \"#ffffff\"}}>\n                                      <strong>Schedule:</strong>\n                                    </Button><br/>\n\n                                    <Button variant=\"contained\" startIcon={<AccessTimeIcon />} style={{backgroundColor: \"#FFFF00\", color: \"#000000\"}}>\n                                        \n                                    </Button> {this.state.movieDetails.schedule.time}<br/>\n                                     \n                                     <Button variant=\"contained\" style={{backgroundColor: \"#FFFF00\", color: \"#000000\"}}>\n                                         <strong>Days:</strong>\n                                     </Button> {this.state.movieDetails.schedule.days.map((day, id) => {\n                                        return (\n                                            <span key={id}>\n                                                {day + ' '}\n                                            </span>\n                                        )\n                                    })}\n                                </div>\n                                <Divider />\n                                 <div className=\"status\">\n                                     <Button variant=\"contained\" style={{backgroundColor: \"#008000\", color: \"#ffffff\"}}>\n                                       <strong>Status:</strong>\n                                     </Button>\n                                     {this.state.movieDetails.status}\n                                </div>\n                            </div>\n                        </div>\n\n                                    <div>\n                                        <Button variant=\"contained\" style={{backgroundColor: \"#000000\", color: \"#ffffff\"}}>\n                                        <h3>Cast</h3><br/>\n                                        </Button>\n                                    </div>\n\n                        <div className=\"castContainer\">\n                                \n                            {this.state.movieDetails._embedded.cast.map((actor, id) => {\n                                return (\n                                    <div classname=\"cast\" item xs={3} key={id}>\n                                        <div>\n                                           <Card>\n                                                <CardMedia \n                                                   style={{height:350, width: 300}}\n                                                   component=\"img\" \n                                                   image={actor.person.image.original} \n                                                />\n                                                <CardContent>\n                                                    <Typography component=\"h2\">\n                                                       {actor.person.name}\n                                                    </Typography>\n                                                </CardContent>\n                                            </Card>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                            <div className=\"viewMore\" item xs={3} style={{justifyContent: 'center', alignContent: 'center', paddingTop: '10%'}}>\n                                <Link style={{ textDecoration: 'none' }} to=\"/\">\n                                    <Button variant=\"contained\" color=\"primary\">View More TV  Shows</Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>)}\n                    \n                </Container>\n        )\n    }\n}\n\nexport default MovieInfo\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MovieHome from './movieComponents/MovieHome';\nimport SearchResult from './searchComponents/SearchResult';\nimport MovieInfo from './movieComponents/MovieInfo';\n\nconst Home = props => (\n    <Switch>\n        <Route exact path=\"/\" component={MovieHome}/>\n        <Route path=\"/movies/:id\" component={SearchResult}/>\n        <Route path=\"/movieinfo/:id\" component={MovieInfo}/>\n    </Switch>\n);\n\nexport default Home;","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\n\nexport default function Footer() {\n    return (\n        <div>\n                    <Typography color=\"primary\" style={{flex:1, fontSize: 10, fontWeight: \"bold\"}} align=\"center\">\n                        Made with\n                        <IconButton color=\"primary\">\n                            <FavoriteIcon />\n                        </IconButton>\n                        by Mantoss\n                    </Typography>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport 'whatwg-fetch';\nimport Home from './Home';\nimport Footer from './Footer' \n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        \n          <div className=\"header\">\n\n              <div className=\"App-logo\">\n                  <img alt=\"app icon\" width=\"85\" src=\"https://img.icons8.com/clouds/200/000000/retro-tv.png\" />\n              </div>\n\n              <div className=\"siteName\">\n                  <h1>Movies Database</h1>\n              </div>\n\n              <div className=\"homeBtn\">\n                  <Link style={{ textDecoration: 'none' }} to=\"/\">\n                    <HomeRoundedIcon />\n                  </Link>\n              </div>\n\n          </div>\n\n        <AppBar position=\"static\" >\n            <Toolbar >\n                <Typography variant=\"subtitle1\" color=\"inherit\" style={{flex:1}} align=\"center\">\n                  Look Up Your Favorite TV Shows and Movies\n                </Typography>\n            </Toolbar>\n        </AppBar>\n\n        <Home />\n        <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n       <App />\n    </Router>, \n    document.getElementById('root'));\n"],"sourceRoot":""}